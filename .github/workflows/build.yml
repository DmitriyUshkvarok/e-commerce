# name: Build
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened]
# jobs:
#   sonarcloud:
#     name: SonarCloud
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
#       - name: SonarCloud Scan
#         uses: SonarSource/sonarcloud-github-action@master
#         env:
#           REMOVED: ${{ secrets.REMOVED }} # Needed to get PR information, if any
#           REMOVED: ${{ secrets.REMOVED }}

name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          REMOVED: ${{ secrets.REMOVED }}
          REMOVED: ${{ secrets.REMOVED }}

  quality_gate:
    name: Check SonarCloud Quality Gate
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - name: Wait for SonarCloud Analysis
        run: |
          echo "Waiting for SonarCloud analysis to complete..."
          sleep 30 # Increase if needed, depending on your analysis duration

      - name: Check Quality Gate Status
        id: check_quality_gate
        run: |
          response=$(curl -s -X GET "https://sonarcloud.io/api/qualitygates/project_status?projectKey=${{ secrets.SONAR_PROJECT_KEY }}" \
            -H "Authorization: Bearer ${{ secrets.REMOVED }}")
          status=$(echo "$response" | jq -r '.projectStatus.status')

          if [ "$status" != "OK" ]; then
            echo "Quality Gate failed. Status: $status"
            exit 1
          else
            echo "Quality Gate passed. Status: $status"
          fi
        env:
          REMOVED: ${{ secrets.REMOVED }}
